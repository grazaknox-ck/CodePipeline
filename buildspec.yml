version: 0.2
phases:
  pre_build:
    commands:
      - echo Installing AWS lambda Tools 
      - $ printf -v version '%(%s)T' -1
      - dotnet tool install -g Amazon.Lambda.Tools
      - echo Installing AWS lambda Templates 
      - dotnet new -i 'Amazon.Lambda.Templates::*'
      - echo Restore started on `date`
      - dotnet restore TestPipeline/src/TestPipeline/TestPipeline.csproj
  build:
    commands:
      - echo Build started on `date`
      - cd TestPipeline/src/TestPipeline/
      - dotnet publish -o myapp
      - cd myapp
      - zip -r ${version}.zip .
      - cd ../../../../
      - sed -i "s/fileversion/$version/g" cfn.json
      - sed -i "s/{env}/$env/g" template.json
      - sed -i "s/{project_name_proper}/project_name_proper/g" template.json
      - sed -i "s/{ENV}/$ENV/g" template.json
      - sed -i "s/{xRefNum}/$xRefNum/g" template.json
      - sed -i "s/{code_location_to_s3}/$xRefNum/g" template.json
      - sed -i "s/{project_name}/$project_name/g" template.json
      - ls
      - aws s3 cp . s3://hotel-mock/new/ --recursive

artifacts:
  files:
    - TestPipeline/src/TestPipeline/myapp/${version}.zip
    - cfn.json